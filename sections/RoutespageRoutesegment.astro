---
import { mdxComponentsAstro } from '@shared/cms/components/mdxComponentsAstro.astro'
import Section from '@shared/layouts/Section.astro'
import { getCollection, getEntry, type CollectionEntry } from 'astro:content'
import RoutespageRoutesegmentDetail from './RoutespageRoutesegmentDetail.astro'

type Props = {
  route: CollectionEntry<'routesegments'>
}

const { route } = Astro.props

// we query the segments collection again to have all the logic in a compoenent of our submodule shared folder compoent and not on the /route/[slug].astro page
const segments = await getCollection('routesegments')

const getPreviousSegment = ({ segments, position }: { segments: any[]; position: number }) => {
  return (
    segments
      .filter((segment) => segment.data.position < position)
      .sort((a, b) => b.data.position - a.data.position)[0] || null
  )
}
const getNextSegment = ({ segments, position }: { segments: any[]; position: number }) => {
  return (
    segments
      .filter((segment) => segment.data.position > position)
      .sort((a, b) => a.data.position - b.data.position)[0] || null
  )
}

const previousSegment = getPreviousSegment({ segments, position: route.data.position })
const nextSegment = getNextSegment({ segments, position: route.data.position })

const { Content } = await route.render()
const routesegmentDetails = await getCollection('routesegmentdetails')

const filteredAndSortedDetails = routesegmentDetails
  .filter((detail) => detail.data.route === route.slug)
  .sort((a, b) => a.data.position - b.data.position)

const { title, operator, contact } = route.data

const page = await getEntry('routepage', 'index')
const subPagesActive = page?.data.subPagesActive
---

<Section prose>
  {
    subPagesActive && (
      <div class="mt-16 mb-12 flex flex-col justify-between gap-4 sm:flex-row sm:items-center">
        <a class="sm:hidden" href="/route">
          Zur Routenübersicht
        </a>
        {previousSegment && (
          <a href={`/route/${previousSegment.slug}`} class="inline-flex items-center">
            ← Zum vorherigen Abschnitt
          </a>
        )}
        <a class="hidden sm:block" href="/route">
          Zur Routenübersicht
        </a>
        {nextSegment && (
          <a href={`/route/${nextSegment.slug}`} class="inline-flex items-center">
            Zum nächsten Abschnitt →
          </a>
        )}
      </div>
    )
  }
  <header id={route.slug} class="scroll-m-8">
    <h2>{title}</h2>
    {
      (
        <p>
          {operator && (
            <>
              <strong>Baulastträger/in:</strong> {operator}
            </>
          )}
          {operator && (
            <>
              <strong>Planungsstand:</strong> {operator}
            </>
          )}
          {contact && (
            <>
              <strong>Ansprechpartner/in:</strong> {contact}
            </>
          )}
        </p>
      )
    }
  </header>
</Section>

<Section prose>
  <article>
    <Content components={mdxComponentsAstro} />
  </article>

  {
    filteredAndSortedDetails.length > 0 ? (
      <>
        <h3 class="!mt-14">Detailinfos</h3>
        <ol class="not-prose divide-y divide-gray-200 border-y">
          {filteredAndSortedDetails.map((detail) => (
            <li>
              <RoutespageRoutesegmentDetail detail={detail} />
            </li>
          ))}
        </ol>
      </>
    ) : null
  }
</Section>

<Section prose>
  <div class="prose-ul:pl-0">
    {
      Boolean(route.data.documents?.length) && (
        <>
          <h3 class="my-8">Download von Unterlagen</h3>
          <ul class="prose-li:list-none prose-li:pl-0 space-y-8">
            {route.data.documents!.map((document) => (
              <li>
                <p>
                  <strong>{document.title}</strong>
                  <br />
                  {document.description}
                </p>
                <a target="_blank" href={document.document}>
                  Datei herunterladen
                </a>
              </li>
            ))}
          </ul>
        </>
      )
    }
  </div>
  <div class="prose-ul:pl-0">
    {
      Boolean(route.data.socials?.length) && (
        <>
          <h3 class="my-8">Bilder und aktuelle Nachrichten</h3>
          <ul class="prose-li:list-none prose-li:pl-0">
            {route.data.socials!.map((social) => (
              <li class="flex items-center gap-4">
                {/* todo  */}
                {/* <img src={social.icon} alt="" class="h-4 w-4" /> */}
                <a target="_blank" href={social.link}>
                  {social.label}
                </a>
              </li>
            ))}
          </ul>
        </>
      )
    }
  </div>
</Section>
