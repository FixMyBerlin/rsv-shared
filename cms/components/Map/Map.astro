---
import { RouteMap } from '@shared/sections/maps/RouteMap'
import { RoutesegmentMap } from '@shared/sections/maps/RoutesegmentMap'
import { SimpleMap } from '@shared/sections/maps/SimpleMap'
import { getCollection, getEntry } from 'astro:content'

const { type } = Astro.props

const routesegments = await getCollection('routesegments')

const routeGeometryCollection = await getCollection('routegeometry')
const routeGeometry = routeGeometryCollection.map((entry) => entry.data)

const routesegmentDetails = await getCollection('routesegmentdetails')

const homepage = await getEntry('homepage', 'index')
---

<div class="not-prose">
  {
    type.discriminant === 'routesegmentmap' && (
      <RoutesegmentMap
        geometry={routeGeometry}
        routesegments={routesegments}
        segmentFocusSlug={type.value}
        routesegmentDetails={routesegmentDetails
          .filter((detail) => detail.data.route === type.value)
          .sort((a, b) => a.data.position - b.data.position)}
        client:load
      />
    )
  }

  {
    type.discriminant === 'routemap' && (
      <RouteMap geometry={routeGeometry} routesegments={routesegments} client:load />
    )
  }
  {
    type.discriminant === 'basic' && (
      <SimpleMap geometry={routeGeometry} label={homepage?.data.title || ''} client:load />
    )
  }
</div>
